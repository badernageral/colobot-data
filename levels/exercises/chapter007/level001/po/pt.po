# Copyright (C) 2016 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# José Robson Mariano Alves <jose.alves@ifto.edu.br>, 2018.
msgid ""
msgstr ""
"Project-Id-Version: colobot-data 0.1.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: DATE\n"
"PO-Revision-Date: 2018-05-15 09:02-0300\n"
"Last-Translator: José Robson Mariano Alves <jose.alves@ifto.edu.br>\n"
"Language-Team: Portuguese <kde-i18n-pt_BR@kde.org>\n"
"Language: pt_PT\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Lokalize 2.0\n"

#. type: Title-text
#: ../scene.txt:1
#, no-wrap
msgid "Remote control #3"
msgstr "Controle remoto #3"

#. type: Resume-text
#: ../scene.txt:2
#, no-wrap
msgid "Remote control a bot without using an information exchange post by using a string."
msgstr "Controle remotamente um robô sem usar um posto de troca de informações, mas sim uma string."

#. type: ScriptName-text
#: ../scene.txt:3
#, no-wrap
msgid "Remote3"
msgstr "Remoto3"

#. type: \b; header
#: ../help/help.E.txt:1
#, no-wrap
msgid "Exercice"
msgstr "Exercício"

#. type: Plain text
#: ../help/help.E.txt:2
#, no-wrap
msgid "Remote control a slave robot without using an <a object|exchange>information exchange post</a>. The robot should pass over the 6 blue crosses. You must use a <a cbot|string>string</a> to pass the orders to the slave bot. This string contains the order the slave shoud execute, for exemple <code>\"move(20)\"</code>. You can see that this is the same syntax as used in the CBOT language but we could have chosen any other syntax for exemple something like <code>\"advance=20\"</code>. The string will be a <code><a cbot|static>static</a></code> class member that will be used to communicate from the master to the slave."
msgstr "Controle remotamente um robô escravo sem usar um <a object|exchange>posto de troca de informações</a>. O robô deve passar pelas 6 cruzes azuis. Você deve usar uma <a cbot|string>string</a> para passar as ordens para o robô escravo. Esta string contém a ordem que o escravo deve executar, por exemplo <code>\"move (20)\"</code>. Você pode ver que esta é a mesma sintaxe usada na linguagem CBOT, mas poderíamos ter escolhido qualquer outra sintaxe para exemplo algo como <code>\"avance = 20\" </ code>. A string será um membro de classe <code><a cbot|static>static</a></code> que será usada para se comunicar do mestre para o escravo."

#. type: Plain text
#: ../help/help.E.txt:4
#, no-wrap
msgid "The two main actors of this exercise are:"
msgstr "Os dois principais atores deste exercício são:"

#. type: Bullet: '1)'
#: ../help/help.E.txt:5
#, no-wrap
msgid "The <a object|botgr>wheeled grabber</a> without an energy pack and therefore immobile. This is the master you should program so it will transmit orders to the slave."
msgstr "O <a object|botgr>agarrador com rodas</a> sem uma célula de energia e, portanto, imóvel. Este é o mestre que você deve programar para transmitir ordens ao escravo."

#. type: Bullet: '2)'
#: ../help/help.E.txt:6
#, no-wrap
msgid "The slave <a object|bottr>practice bot</a> which is already programmed and just waits for orders from the master."
msgstr "O <a object|bottr>robô de prática</a> escravo que já está programado e apenas aguarda ordens do mestre."

#. type: \b; header
#: ../help/help.E.txt:8
#, no-wrap
msgid "The slave"
msgstr "O escravo"

#. type: Plain text
#: ../help/help.E.txt:9
#, no-wrap
msgid "First of all we must understand how the program of the slave works. The <a cbot|class>class</a> <code>exchange</code> contains the mechanism for exchaning the orders. We declare a <code><a cbot|static>static</a></code> class member <code>m_order</code> which will contain the order to be executed. The word <code>static</code> insures that the member <code>m_order</code> is shared between all instances of the <a cbot|class>class</a> exchange."
msgstr "Primeiro de tudo, devemos entender como funciona o programa do escravo. A <a cbot|class>classe</a> <code>troca</code> contém o mecanismo de troca dos pedidos. Nós declaramos um <code>membro de classe <a cbot|static>estático</a></code> <code>m_ordem</code> que conterá a ordem a ser executada. A palavra <code>static</code> assegura que o membro <code>m_ordem</code> seja compartilhado entre todas as instâncias da classe <a cbot|class>troca</a>."

#. type: Plain text
#: ../help/help.E.txt:11
#, no-wrap
msgid "<c/><s/><a cbot|public>public</a> <a cbot|class>class</a> exchange"
msgstr "<c/><s/><a cbot|public>public</a> <a cbot|class>class</a> troca"

#. type: Source code
#: ../help/help.E.txt:12
#, no-wrap
msgid ""
"{\n"
"\t<a cbot|static>static</a> <a cbot|private>private</a> <a cbot|string>string</a> m_order = \"\";"
msgstr ""
"{\n"
"\t<a cbot|static>static</a> <a cbot|private>private</a> <a cbot|string>string</a> m_ordem = \"\";"

#. type: Plain text
#: ../help/help.E.txt:15
#, no-wrap
msgid "<n/>The <code>put</code> method will be used by the master robot for transmitting an order. As long as the string <code>m_order</code> is not empty, the slave has not finished the order and the <code>put</code> method will return <code>false</code> and will do nothing."
msgstr "<n/> O método <code>colocar</code> será usado pelo robô mestre para transmitir um pedido. Contanto que a string <code>m_ordem</code> não esteja vazia, o escravo não terminou a ordem e o método <code>colocar</ code> retornará <code>false</code> e não fará nada...."

#. type: Plain text
#: ../help/help.E.txt:17
#, no-wrap
msgid "<c/><s/>\t<a cbot|synchro>synchronized</a> <a cbot|bool>bool</a> put(string order)"
msgstr "<c/><s/>\t<a cbot|synchro>synchronized</a> <a cbot|bool>bool</a> colocar(string ordem)"

#. type: Source code
#: ../help/help.E.txt:18
#, no-wrap
msgid ""
"\t{\n"
"\t\tif ( m_order == \"\" )\n"
"\t\t{\n"
"\t\t\tm_order = order;\n"
"\t\t\treturn true;\n"
"\t\t}\n"
"\t\telse\n"
"\t\t{\n"
"\t\t\treturn false;\n"
"\t\t}\n"
"\t}"
msgstr ""
"\t{\n"
"\t\tif ( m_ordem == \"\" )\n"
"\t\t{\n"
"\t\t\tm_ordem = ordem;\n"
"\t\t\treturn true;\n"
"\t\t}\n"
"\t\telse\n"
"\t\t{\n"
"\t\t\treturn false;\n"
"\t\t}\n"
"\t}"

#. type: Plain text
#: ../help/help.E.txt:30
#, no-wrap
msgid "Another method <code>get</code> will be used by the slave to retrieve the orders. This method returns the string contained in <code>m_order</code> and empties it, so a new order can be accepted:"
msgstr "Outro método <code>pegar</code> será usado pelo escravo para recuperar as ordens. Este método retorna a string contida em <code>m_ordem</code> e a esvazia, então um novo pedido pode ser aceito:"

#. type: Plain text
#: ../help/help.E.txt:32
#, no-wrap
msgid "<c/><s/>\t<a cbot|synchro>synchronized</a> string get()"
msgstr "<c/><s/>\t<a cbot|synchro>synchronized</a> string pegar()"

#. type: Source code
#: ../help/help.E.txt:33
#, no-wrap
msgid ""
"\t{\n"
"\t\tstring ret = m_order;\n"
"\t\tm_order = \"\";\n"
"\t\treturn ret;\n"
"\t}\n"
"}"
msgstr ""
"\t{\n"
"\t\tstring retorno = m_ordem;\n"
"\t\tm_ordem = \"\";\n"
"\t\treturn retorno;\n"
"\t}\n"
"}"

#. type: Plain text
#: ../help/help.E.txt:40
#, no-wrap
msgid "The main program of the slave contains an instance of the class <code>exchange</code> called <code>list</code>."
msgstr "O programa principal do escravo contém uma instância da classe <code>troca</code> chamada <code>lista</code>."

#. type: Plain text
#: ../help/help.E.txt:42
#, no-wrap
msgid "<c/><s/><a cbot|extern>extern</a> void object::Slave3( )"
msgstr "<c/><s/><a cbot|extern>extern</a> void object::Escravo3( )"

#. type: Source code
#: ../help/help.E.txt:43
#, no-wrap
msgid ""
"{\n"
"\texchange list();\n"
"\tstring   todo;"
msgstr ""
"{\n"
"\ttroca lista();\n"
"\tstring   para_fazer;"

#. type: Plain text
#: ../help/help.E.txt:47
#, no-wrap
msgid "The outer <code>while</code> loop lasts for ever. The inner <code>while</code> loop waits for an order by using the <code>get</code> method of the <code>exchange</code> class. As soon as <code>get</code> returns a non empty string, the while loop stops."
msgstr "O laço externo <code>while</code> dura para sempre. O laço interno <code>while</code> espera por uma ordem usando o método <code>pegar</code> da classe <code>troca</code>. Assim que <code>pegar</code> retorna uma string não vazia, o laço while para."

#. type: Plain text
#: ../help/help.E.txt:49
#, no-wrap
msgid "<c/><s/>\t<a cbot|while>while</a> ( true )"
msgstr "<c/><s/>\t<a cbot|while>while</a> ( true )"

#. type: Source code
#: ../help/help.E.txt:50
#, no-wrap
msgid ""
"\t{\n"
"\t\t<a cbot|while>while</a> ( true )\n"
"\t\t{\n"
"\t\t\ttodo = list.get();\n"
"\t\t\tif ( todo != \"\" )  break;\n"
"\t\t\twait(1);\n"
"\t\t}"
msgstr ""
"\t{\n"
"\t\t<a cbot|while>while</a> ( true )\n"
"\t\t{\n"
"\t\t\tpara_fazer = lista.pegar();\n"
"\t\t\tif ( para_fazer != \"\" )  break;\n"
"\t\t\twait(1);\n"
"\t\t}"

#. type: Plain text
#: ../help/help.E.txt:58
#, no-wrap
msgid "Now we have received the order in the <code>todo</code> variable. All we have to do is execute it:"
msgstr "Agora recebemos a ordem na variável <code>para_fazer</code>. Tudo o que temos a fazer é executá-la:"

#. type: Plain text
#: ../help/help.E.txt:60
#, no-wrap
msgid "<c/><s/>\t\tif ( <a cbot|strfind>strfind</a>(todo, \"move\") == 0 )"
msgstr "<c/><s/>\t\tif ( <a cbot|strfind>strfind</a>(para_fazer, \"move\") == 0 )"

#. type: Source code
#: ../help/help.E.txt:61
#, no-wrap
msgid ""
"\t\t{\n"
"\t\t\tmove(<a cbot|strval>strval</a>(<a cbot|strmid>strmid</a>(todo,5)));\n"
"\t\t}\n"
"\t\tif ( strfind(todo, \"turn\") == 0 )\n"
"\t\t{\n"
"\t\t\tturn(strval(strmid(todo,5)));\n"
"\t\t}\n"
"\t}\n"
"}"
msgstr ""
"\t\t{\n"
"\t\t\tmove(<a cbot|strval>strval</a>(<a cbot|strmid>strmid</a>(para_fazer,5)));\n"
"\t\t}\n"
"\t\tif ( strfind(para_fazer, \"turn\") == 0 )\n"
"\t\t{\n"
"\t\t\tturn(strval(strmid(para_fazer,5)));\n"
"\t\t}\n"
"\t}\n"
"}"

#. type: \b; header
#: ../help/help.E.txt:71
#, no-wrap
msgid "The master"
msgstr "O mestre"

#. type: Plain text
#: ../help/help.E.txt:72
#, no-wrap
msgid "In the master we write an function called <code>SendOrder</code> which will send an order to the slave:"
msgstr "No mestre nós escrevemos uma função chamada <code>EnviarOrdem</code> que irá enviar um pedido para o escravo:"

#. type: Plain text
#: ../help/help.E.txt:74
#, no-wrap
msgid "<c/><s/>void object::SendOrder(string order)"
msgstr "<c/><s/>void object::EnviarOrdem(string ordem)"

#. type: Source code
#: ../help/help.E.txt:75
#, no-wrap
msgid ""
"{\n"
"\texchange list();\n"
"\t\n"
"\twhile ( list.put(order) == false )\n"
"\t{\n"
"\t\twait(1);\n"
"\t}\n"
"}"
msgstr ""
"{\n"
"\ttroca lista();\n"
"\t\n"
"\twhile ( lista.colocar(ordem) == false )\n"
"\t{\n"
"\t\twait(1);\n"
"\t}\n"
"}"

#. type: Plain text
#: ../help/help.E.txt:84
#, no-wrap
msgid ""
"The <code>while</code> loop waits until a pending order has been terminated, that is the slaved has exited from the <code>get</code> method.\n"
"Now the main program of the master is very simple:"
msgstr ""
"O laço <code>while</code> aguarda até que uma ordem pendente seja terminada, ou seja, o escravo saiu do método <code>pegar</code>. \n"
"Agora o programa principal do mestre é muito simples:"

#. type: Plain text
#: ../help/help.E.txt:87
#, no-wrap
msgid "<c/><s/>extern void object::Remote3( )"
msgstr "<c/><s/>extern void object::Remoto3( )"

#. type: Source code
#: ../help/help.E.txt:88
#, no-wrap
msgid ""
"{\n"
"\tSendOrder(\"move(20)\");\n"
"\tSendOrder(\"turn(90)\");\n"
"\tSendOrder(\"move(20)\");\n"
"\tSendOrder(\"turn(90)\");\n"
"\tSendOrder(\"move(10)\");\n"
"\tSendOrder(\"turn(90)\");\n"
"\tSendOrder(\"move(10)\");\n"
"\tSendOrder(\"turn(-90)\");\n"
"\tSendOrder(\"move(10)\");\n"
"}"
msgstr ""
"{\n"
"\tEnviarOrdem(\"move(20)\");\n"
"\tEnviarOrdem(\"turn(90)\");\n"
"\tEnviarOrdem(\"move(20)\");\n"
"\tEnviarOrdem(\"turn(90)\");\n"
"\tEnviarOrdem(\"move(10)\");\n"
"\tEnviarOrdem(\"turn(90)\");\n"
"\tEnviarOrdem(\"move(10)\");\n"
"\tEnviarOrdem(\"turn(-90)\");\n"
"\tEnviarOrdem(\"move(10)\");\n"
"}"

#. type: Plain text
#: ../help/help.E.txt:100
#, no-wrap
msgid "<format key><key help/></format> show these instruction at any time."
msgstr "<format key><key help/></format> mostra essas instruções a qualquer momento."

#. type: \t; header
#: ../help/help.E.txt:102
#, no-wrap
msgid "See also"
msgstr "Veja também"

#. type: Plain text
#: ../help/help.E.txt:103
#, no-wrap
msgid "<a command>Controls</a> and <a cbot>programming</a>."
msgstr "<a command>Controles e <a cbot>Linguagem CBOT</a>"
